package alauncher.cn.measuringinstrument.utils;

import java.util.ArrayList;
import java.util.List;

public class DebugUitls {

    public static List<Double> injectTest() {
        List<Double> list = new ArrayList<>();
        list.add(30.0389233);
        list.add(30.0389233);
        list.add(30.0389233);
        list.add(30.0389233);
        list.add(30.0389233);
        list.add(30.0389233);
        list.add(30.0389233);
        list.add(30.0389233);
        list.add(30.0389233);
        list.add(30.0389233);
        list.add(30.0389233);
        list.add(30.0389233);
        list.add(30.0389233);
        list.add(30.0389233);
        list.add(30.0389233);
        list.add(30.0389233);
        list.add(30.039093722);
        list.add(30.039238762);
        list.add(30.039463574);
        list.add(30.039808044);
        list.add(30.040018352);
        list.add(30.040199652);
        list.add(30.040453472);
        list.add(30.040674658);
        list.add(30.040855958);
        list.add(30.040942982);
        list.add(30.041059014);
        list.add(30.04118955);
        list.add(30.041233062);
        list.add(30.04129833);
        list.add(30.041367224);
        list.add(30.041367224);
//        list.add(30.041367224);
//        list.add(30.041367224);
//        list.add(30.041367224);
//        list.add(30.041367224);
//        list.add(30.041367224);
        list.add(30.041030006);
        list.add(30.039206128);
        list.add(30.038074816);
        list.add(30.037574428);
        list.add(30.037349616);
        list.add(30.037175568);
        list.add(30.036664302);
        list.add(30.036007996);
        list.add(30.035536616);
        list.add(30.03538795);
        list.add(30.035108748);
        list.add(30.034611986);
        list.add(30.033977436);
        list.add(30.03361121);
        list.add(30.032954904);
        list.add(30.03152626);
        list.add(30.028814012);
        list.add(30.026119894);
        list.add(30.023541808);
        list.add(30.02211679);
        list.add(30.020151498);
        list.add(30.01760242);
        list.add(30.01506422);
        list.add(30.014516694);
        list.add(30.014516694);
        list.add(30.014513068);
        list.add(30.014513068);
        list.add(30.01310618);
        list.add(30.010085722);
        list.add(30.00808417);
        list.add(30.00681507);
        list.add(30.00563662);
        list.add(30.004831648);
        list.add(30.004273244);
        list.add(30.003341362);
        list.add(30.002384098);
        list.add(30.001880084);
        list.add(30.00137607);
        list.add(30.00108599);
        list.add(30.001078738);
        list.add(30.001053356);
        list.add(30.00104973);
        list.add(30.001046104);
        list.add(30.000828544);
        list.add(30.000824918);
        list.add(30.000821292);
        list.add(30.000821292);
        list.add(30.000821292);
        list.add(30.000821292);
        list.add(30.000828544);
        list.add(30.00083217);
        list.add(30.00083217);
        list.add(30.00083217);
        list.add(30.00083217);
        list.add(30.00083217);
        list.add(30.00083217);
        list.add(30.00083217);
        list.add(30.000828544);
        list.add(30.000828544);
        list.add(30.000828544);
        list.add(30.000828544);
        list.add(30.000824918);
        list.add(30.000821292);
        list.add(30.000821292);
        list.add(30.000821292);
        list.add(30.000839422);
        list.add(30.001517484);
        list.add(30.001644394);
        list.add(30.001894588);
        list.add(30.002413106);
        list.add(30.0032072);
        list.add(30.003493654);
        list.add(30.003700336);
        list.add(30.004037554);
        list.add(30.004715616);
        list.add(30.005524214);
        list.add(30.006256666);
        list.add(30.007047134);
        list.add(30.007950008);
        list.add(30.009200978);
        list.add(30.010361298);
        list.add(30.011659406);
        list.add(30.012638426);
        list.add(30.013675462);
        list.add(30.014389784);
        list.add(30.015405064);
        list.add(30.016471108);
        list.add(30.017805476);
        list.add(30.018915032);
        list.add(30.019926686);
        list.add(30.020891202);
        list.add(30.020887576);
        list.add(30.02088395);
        list.add(30.02088395);
        list.add(30.02286012);
        list.add(30.025728286);
        list.add(30.02762831);
        list.add(30.02891554);
        list.add(30.030685028);
        list.add(30.031874356);
        list.add(30.032846124);
        list.add(30.0340282);
        list.add(30.034405304);
        list.add(30.034651872);
        list.add(30.034931074);
        list.add(30.03555112);
        list.add(30.035609136);
        list.add(30.035609136);
        list.add(30.035609136);
        list.add(30.035591006);
        list.add(30.03558738);
        list.add(30.035583754);
        list.add(30.035583754);
        list.add(30.035583754);
        list.add(30.035583754);
        list.add(30.035583754);
        list.add(30.035583754);
        list.add(30.035583754);
        list.add(30.035609136);
        list.add(30.035612762);
        list.add(30.035612762);
        list.add(30.035616388);
        list.add(30.035616388);
        list.add(30.035616388);
        list.add(30.035616388);
        list.add(30.035616388);
        list.add(30.035616388);
        list.add(30.035616388);
        list.add(30.035616388);
        list.add(30.035616388);
        list.add(30.035616388);
        list.add(30.035616388);
        list.add(30.035616388);
        list.add(30.035616388);
        list.add(30.035616388);
        list.add(30.035616388);
        list.add(30.035616388);
        list.add(30.035616388);
        return list;
    }

}
